[gandi]
api_key = API_KEY
api_url_base = https://api.gandi.net
api_url_domains = /v5/livedns/domains
api_url_domains_ns = /{}/nameservers
api_url_domains_records = /{}/records
api_url_domains_records_create = /{}/records/{}
record_name_root = RECORD_NAME_ROOT
record_ttl = RECORD_TTL
record_type_a = RECORD_TYPE_A
record_type_cname = RECORD_TYPE_CNAME
target_domain_fqdn = TARGET_DOMAIN_FQDN
msg_dns_domain_not_found = "CRITICAL: Domain record not found, Please verify the domain exists!"
msg_dns_get_all_domains = "Get all domains"
msg_dns_search_domain = "Searching for the target domain..."
msg_dns_domain_found = "SUCCESS: Target domain has been found! {}"
msg_dns_domain_records_get = "Get all records for the domain"
msg_dns_domain_a_records_get = "Searching for the target A record"
msg_dns_domain_a_record_not_found =  "A record not found"
msg_dns_domain_a_record_root_found = "SUCCESS: A record for Root has been found {}"
msg_dns_domain_a_record_root_create = "Create A record for Root"
msg_dns_domain_record_create = "Create A record request: {}, Status Code: {}, Payload: {}"
msg_dns_a_record_overwrite = "Synchronizing A record state's IPv4 with IPv4 from ip_state ..."
msg_dns_a_record_validate = "Validating IPv4 from A record state: {} vs IPv4 from wan_ip_state: {}"
msg_dns_a_record_state_ip_not_synced = "IPs do not match, a_record_state: {}"

[WANIPState]
ip_check_services = {"svc": [
    "https://aapi.ipify.org/?format=text"]}
msg_close_connection = "OK: Connection closed: {}"
msg_connection_error = "SKIPPING: Please check if service is accessible: {}; Error:{}"
msg_http_error = "SKIPPING: Couldn't retrieve WAN IPv4 from Service {}; Status Code {}"
msg_ip_found = "SUCCESS: {} Returned: {} as your WAN IPv4"
msg_ip_invalid = "SKIPPING: Invalid IPv4 address: {}; from: {}"
msg_ip_non_ipv4 = "SKIPPING: Non IPv4 returned {} {}"
msg_ip_not_collected = "CRITICAL: Unable to collect IPv4 address from: {}"
msg_ip_non_global = "SKIPPING: IPv4 is not Globally Reachable {}"
msg_missmatch = "CRITICAL: {} Mismatch in IPv4 addresses, please retry later or change service {}"
msg_retry_request = "RETRY: Attempt #{}; Cooldown {} seconds; Service {}"
msg_success_from_all = "SUCCESS: IPv4 addresses from external services match! {}"
msg_success_from_one = "SUCCESS: At least one IPv4 was collected! {}"
retry_attempts = 3
retry_cooldown_seconds = 5

[log]
log_file = esddns.log
log_to_console = True

[ESDDNS]
msg_ip_dns_in_sync = "SUCCESS: IPv4 and DNS A record states are in sync: {}"
msg_dns_not_in_sync = "DNS A record state is out of sync: {}"
msg_dns_update = "Updating DNS A record's IP with current WAN IP: {}"
msg_dns_update_success = "SUCCESS: A Record has been updated {}"
msg_dns_update_fail = "Critical: Could not update A Record: Request: {} Status Code: {}"
daemon_thread_interval = 300
service_host = "0.0.0.0"
service_port = "51139"
msg_daemon_scheduled = "ESDDNS Standalone scheduler started!"
msg_daemon_exec = "Running scheduled daemon thread!"
msg_daemon_next_exec =  "Next scheduled run in {} seconds"